{"ast":null,"code":"var _jsxFileName = \"/Users/lupilia/todo-list/src/components/Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Todo(props) {\n  _s();\n\n  const [isEditing, setEditing] = useState(false);\n  const [newName, setNewName] = useState('');\n\n  function handleChange(e) {\n    setNewName(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.editTask(props.id, newName);\n    setNewName(\"\");\n    setEditing(false);\n  }\n\n  const editingTemplate = /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"stack-small\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"todo-label\",\n        htmlFor: props.id,\n        children: [\"New name for \", props.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: props.id,\n        className: \"todo-text\",\n        type: \"text\",\n        value: newName,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn todo-cancel\",\n        onClick: () => setEditing(false),\n        children: [\"Cancel\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: [\"renaming \", props.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn__primary todo-edit\",\n        children: [\"Save\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: [\"new name for \", props.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 4\n  }, this);\n\n  const viewTemplate = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stack-small\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"c-cb\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: props.id,\n        type: \"checkbox\",\n        defaultChecked: props.completed,\n        onChange: () => props.toggleTaskCompleted(props.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"todo-label\",\n        htmlFor: props.id,\n        children: props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn\",\n        onClick: () => setEditing(true),\n        children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: props.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn__danger\",\n        onClick: () => props.deleteTask(props.id),\n        children: [\"Delete \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: props.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 4\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"todo\",\n    children: isEditing ? editingTemplate : viewTemplate\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Todo, \"sXN9PY+tFVl0ATWUxw1/pO5209c=\");\n\n_c = Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/Users/lupilia/todo-list/src/components/Todo.js"],"names":["React","useState","Todo","props","isEditing","setEditing","newName","setNewName","handleChange","e","target","value","handleSubmit","preventDefault","editTask","id","editingTemplate","name","viewTemplate","completed","toggleTaskCompleted","deleteTask"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAEnC,QAAM,CAACC,SAAD,EAAYC,UAAZ,IAA0BJ,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;;AAEA,WAASO,YAAT,CAAsBC,CAAtB,EAAyB;AACxBF,IAAAA,UAAU,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACA;;AAED,WAASC,YAAT,CAAsBH,CAAtB,EAAyB;AACxBA,IAAAA,CAAC,CAACI,cAAF;AACAV,IAAAA,KAAK,CAACW,QAAN,CAAeX,KAAK,CAACY,EAArB,EAAyBT,OAAzB;AACAC,IAAAA,UAAU,CAAC,EAAD,CAAV;AACAF,IAAAA,UAAU,CAAC,KAAD,CAAV;AACA;;AAED,QAAMW,eAAe,gBACnB;AAAM,IAAA,SAAS,EAAC,aAAhB;AAA8B,IAAA,QAAQ,EAAEJ,YAAxC;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAO,QAAA,SAAS,EAAC,YAAjB;AAA8B,QAAA,OAAO,EAAET,KAAK,CAACY,EAA7C;AAAA,oCACgBZ,KAAK,CAACc,IADtB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AACC,QAAA,EAAE,EAAEd,KAAK,CAACY,EADX;AAEC,QAAA,SAAS,EAAC,WAFX;AAGC,QAAA,IAAI,EAAC,MAHN;AAIC,QAAA,KAAK,EAAET,OAJR;AAKC,QAAA,QAAQ,EAAEE;AALX;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAaE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AACC,QAAA,IAAI,EAAC,QADN;AAEC,QAAA,SAAS,EAAC,iBAFX;AAGC,QAAA,OAAO,EAAE,MAAMH,UAAU,CAAC,KAAD,CAH1B;AAAA,0CAME;AAAM,UAAA,SAAS,EAAC,iBAAhB;AAAA,kCAA4CF,KAAK,CAACc,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,4BAAhC;AAAA,wCAEE;AAAM,UAAA,SAAS,EAAC,iBAAhB;AAAA,sCAAgDd,KAAK,CAACc,IAAtD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AA+BA,QAAMC,YAAY,gBAChB;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI;AACE,QAAA,EAAE,EAAEf,KAAK,CAACY,EADZ;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,cAAc,EAAEZ,KAAK,CAACgB,SAHxB;AAIE,QAAA,QAAQ,EAAE,MAAMhB,KAAK,CAACiB,mBAAN,CAA0BjB,KAAK,CAACY,EAAhC;AAJlB;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAO,QAAA,SAAS,EAAC,YAAjB;AAA8B,QAAA,OAAO,EAAEZ,KAAK,CAACY,EAA7C;AAAA,kBACGZ,KAAK,CAACc;AADT;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAYI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AACC,QAAA,IAAI,EAAC,QADN;AAEC,QAAA,SAAS,EAAC,KAFX;AAGC,QAAA,OAAO,EAAE,MAAMZ,UAAU,CAAC,IAAD,CAH1B;AAAA,yCAKO;AAAM,UAAA,SAAS,EAAC,iBAAhB;AAAA,oBAAmCF,KAAK,CAACc;AAAzC;AAAA;AAAA;AAAA;AAAA,gBALP;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAC,iBAFZ;AAGE,QAAA,OAAO,EAAE,MAAMd,KAAK,CAACkB,UAAN,CAAiBlB,KAAK,CAACY,EAAvB,CAHjB;AAAA,2CAKS;AAAM,UAAA,SAAS,EAAC,iBAAhB;AAAA,oBAAmCZ,KAAK,CAACc;AAAzC;AAAA;AAAA;AAAA;AAAA,gBALT;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAgCA,sBAAO;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA,cAAsBb,SAAS,GAAGY,eAAH,GAAqBE;AAApD;AAAA;AAAA;AAAA;AAAA,UAAP;AAEA;;GAjFuBhB,I;;KAAAA,I","sourcesContent":["import React, { useState } from \"react\";\n\nexport default function Todo(props) {\n\t\n\tconst [isEditing, setEditing] = useState(false);\n\tconst [newName, setNewName] = useState('');\n\n\tfunction handleChange(e) {\n\t\tsetNewName(e.target.value);\n\t}\n\n\tfunction handleSubmit(e) {\n\t\te.preventDefault();\n\t\tprops.editTask(props.id, newName);\n\t\tsetNewName(\"\");\n\t\tsetEditing(false);\n\t}\n\n\tconst editingTemplate = (\n\t  <form className=\"stack-small\" onSubmit={handleSubmit}>\n\t    <div className=\"form-group\">\n\t      <label className=\"todo-label\" htmlFor={props.id}>\n\t        New name for {props.name}\n\t      </label>\n\t      <input\n\t      \tid={props.id}\n\t      \tclassName=\"todo-text\"\n\t      \ttype=\"text\"\n\t      \tvalue={newName}\n\t      \tonChange={handleChange}\n\t      />\n\t    </div>\n\t    <div className=\"btn-group\">\n\t      <button\n\t      \ttype=\"button\"\n\t      \tclassName=\"btn todo-cancel\"\n\t      \tonClick={() => setEditing(false)}\n\t      >\n\t        Cancel\n\t        <span className=\"visually-hidden\">renaming {props.name}</span>\n\t      </button>\n\t      <button type=\"submit\" className=\"btn btn__primary todo-edit\">\n\t        Save\n\t        <span className=\"visually-hidden\">new name for {props.name}</span>\n\t      </button>\n\t    </div>\n\t  </form>\n\t);\n\n\tconst viewTemplate = (\n\t  <div className=\"stack-small\">\n\t    <div className=\"c-cb\">\n\t        <input\n\t          id={props.id}\n\t          type=\"checkbox\"\n\t          defaultChecked={props.completed}\n\t          onChange={() => props.toggleTaskCompleted(props.id)}\n\t        />\n\t        <label className=\"todo-label\" htmlFor={props.id}>\n\t          {props.name}\n\t        </label>\n\t      </div>\n\t      <div className=\"btn-group\">\n\t        <button\n\t        \ttype=\"button\"\n\t        \tclassName=\"btn\"\n\t        \tonClick={() => setEditing(true)}\n\t        >\n\t          Edit <span className=\"visually-hidden\">{props.name}</span>\n\t        </button>\n\t        <button\n\t          type=\"button\"\n\t          className=\"btn btn__danger\"\n\t          onClick={() => props.deleteTask(props.id)}\n\t        >\n\t          Delete <span className=\"visually-hidden\">{props.name}</span>\n\t        </button>\n\t      </div>\n\t  </div>\n\t);\n\n\treturn <li className=\"todo\">{isEditing ? editingTemplate : viewTemplate}</li>;\n\t\n}"]},"metadata":{},"sourceType":"module"}